# verify that reloading occurs if watchOnStart returns Watched.Reload
$ copy-file changes/extra.sbt extra.sbt

> ~compile
> checkReloaded

# verify that the watch terminates when we reach the specified count
> resetCount
> set watchOnIteration := { (count: Int) => if (count == 2) Watched.CancelWatch else Watched.Ignore }
> ~compile
> checkCount 2

# verify that the watch terminates and returns an error when we reach the specified count
> resetCount
> set watchOnIteration := { (count: Int) => if (count == 2) new Watched.HandleError(new Exception("")) else Watched.Ignore }
# Returning Watched.HandleError causes the '~' command to fail
-> ~compile
> checkCount 2

# verify that a re-build is triggered when we reach the specified count
> resetCount
> set watchOnIteration := { (count: Int) => if (count == 2) Watched.Trigger else if (count == 3) Watched.CancelWatch else Watched.Ignore }
> ~compile
> checkCount 3
